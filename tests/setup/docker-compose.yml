---
version: "3.9"

services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack-pro
    ports:
      # Now only required if you need to access LocalStack from the host
      - "127.0.0.1:4566:4566"
      # Now only required if you need to access LocalStack from the host
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - LOCALSTACK_AUTH_TOKEN
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      ls:
        # Set the container IP address in the 10.0.2.0/24 subnet
        ipv4_address: 10.0.2.20

  redpanda:
    image: redpandadata/redpanda:v24.2.18
    networks:
      - ls
    dns:
      # Set the DNS server to be the LocalStack container
      - 10.0.2.20
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --node-id 0
      - --check=false
      - --kafka-addr 0.0.0.0:9092
      - --advertise-kafka-addr ${EXTERNAL_IP:-redpanda}:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr ${EXTERNAL_IP:-redpanda}:8082
      - --set redpanda.enable_transactions=true
      - --set redpanda.enable_idempotence=true
    ports:
      - 9092:9092
      - 8081:8081
      - 8082:8082
    healthcheck: { test: curl -f localhost:9644/v1/status/ready, interval: 1s, start_period: 30s }

  datagen1:
    image: materialize/datagen:latest
    container_name: datagen1
    networks:
      - ls
    depends_on:
      - redpanda
    environment:
      KAFKA_BROKERS: redpanda:9092
    volumes:
      - ./schemas:/schemas
    entrypoint:
      datagen -s /schemas/schema.json -f json -n 10024

networks:
  ls:
    ipam:
      config:
        # Specify the subnet range for IP address allocation
        - subnet: 10.0.2.0/24